<?php

/**
 * @file
 * Functions to support theming in the HDBT Subtheme.
 */

/**
 * Helper function to get the icons path.
 *
 * @return string|null
 *   Returns path for the icons SVG or null.
 */
function kaupunkitieto_get_icons_path() {
  static $icon_path;
  if (!isset($icon_path)) {
    $theme_handler = \Drupal::service('theme_handler');
    $icon_path = '/' . $theme_handler->getTheme('kaupunkitieto')->getPath() . '/dist/icons/sprite.svg';

    // Add icons path as a global variable.
    if (!empty($icon_path)) {
      return $icon_path;
    }
  }
  return $icon_path;
}

/**
 * Implements hook_preprocess().
 */
function kaupunkitieto_preprocess(&$variables) {
  $variables['kaupunkitieto_icons_path'] = kaupunkitieto_get_icons_path();
  $variables['#attached']['drupalSettings']['hdbtSubthemeIconsPath'] = $variables['kaupunkitieto_icons_path'];
}

/**
 * Implements hook_preprocess_html().
 *
 * Add body class when in Search page.
 */
function kaupunkitieto_preprocess_html(&$vars) {
  // See if we are in a site search view.
  $current_route_name = \Drupal::service('current_route_match')->getRouteName();

  if($current_route_name == 'view.site_search.page_1') {
    $vars['attributes']['class'][] = 'site-search';
  }
}

/**
 * Implements hook_theme_suggestions_input_alter().
 *
 * Add views template suggestions.
 *
 * @inheritdoc
 */
function kaupunkitieto_theme_suggestions_input_alter(array &$suggestions, array $variables) {
  $element = $variables['element'];
  $suggestions[] = 'input__' . str_replace('-', '_', $variables['element']['#id']);
}

/**
 * Implements hook_theme_suggestions_HOOK().
 *
 * Add views field template suggestions.
 *
 * @inheritdoc
 */
function kaupunkitieto_theme_suggestions_views_view_field_alter(array &$suggestions, array &$variables, $hook) {
  if ($variables['view']->id() && $variables['view']->current_display) {
    $suggestions[] = $hook . '__' . $variables['view']->id() . '__' . $variables['view']->current_display . '__' . $variables['field']->field;
  }
}

/**
 * Implements template_preprocess_paragraph().
 *
 * @param array $variables
 *   An associative array containing:
 *   - elements: An array of elements to display in view mode.
 *   - paragraph: The paragraph object.
 *   - view_mode: View mode; e.g., 'full', 'teaser'...
 */
function kaupunkitieto_preprocess_paragraph(array &$variables) {
  /** @var \Drupal\paragraphs\Entity\Paragraph $paragraph */
  $paragraph = $variables['paragraph'];
  $paragraph_type = $paragraph->getType();

  // In case we need to do alter embedding URL, e.g. for YouTube links.
  if ($paragraph_type == 'embed') {
    if (isset($paragraph->get('field_embed_link')->getValue()[0])) {
      $embed_url = $paragraph->get('field_embed_link')->getValue()[0]['uri'];
      $variables['embed_url'] = $embed_url;
    }
  }

  if ($paragraph_type == 'hero') {
    if($paragraph->hasField('field_display_search_field')) {
      $variables['show_search'] = $paragraph->get('field_display_search_field')->value;
    }
  }

  // Get titles for content menu items to be displayed in left-hand navigation.
  if ($paragraph_type == 'content_menu') {
    $items = $paragraph->get('field_content_menu_items');

    foreach ($items as $item) {
      $item_entity = $item->entity;
      $title = $item_entity->get('field_content_menu_item_title')->first()->getValue();
      $variables['menu_links'][$item_entity->id()]['title'] = $title;
      $variables['menu_links'][$item_entity->id()]['title']['aria'] = str_replace(' ', '-', strtolower($title['value']));
    }

  }

  if ($paragraph_type == 'content_menu_item') {
    // Add delta value to variable to define first active item.
    $parent = $variables['paragraph']->getParentEntity();
    if ($parent->hasField('field_content_menu_items')) {
      foreach ($parent->get('field_content_menu_items')->getValue() as $key => $item) {
        if ($item['target_id'] === $variables['paragraph']->id()) {
          $variables['delta'] = $key;
        }
      }
    }
  }

}
